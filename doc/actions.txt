================================================================================
INTRODUCTION                                                      *actions.nvim*

Actions.nvim helps you set up custom commands and their environments relative
to the current context. All the currently available actions may be displayed in
a floating window from which they may be executed, killed and their outputs or
definitions shown.

Getting started with actions:
 1. |actions.setup|
 2. |actions.available_actions|
 3. |actions.toggle_last_output|


actions.setup({user_config})                                 *actions.setup()*
    Set up the plugin and add actions with a |Actions_user_config| object.
    Calling this function multiple times will merge the added configs.



    Parameters: ~
        {user_config} (Actions_user_config)  See |Actions_user_config|.


actions.available_actions()                      *actions.available_actions()*
    Opens a floating window with all the available actions. From that window
    the actions may then be executed, killed and their output or definition
    shown.



actions.toggle_last_output()                    *actions.toggle_last_output()*
    Reopens the last output window of the last run action, or the last opened
    output buffer.




================================================================================
ACTION                                                    *actions.model.action*

Action is an object that represents a sequence of commands and the environment
in which they will be run.

Example action:
>
 {
   cwd = "/temp",
   env = {"HELLO_WORLD" = "Hello World"},
   clear_env = false,
   filetypes = {"lua", "bash"},
   patterns = {".*.lua", ".*.sh"},
   ignore_patterns = {".*ignore.*.lua"},
   steps = {
     "echo 'Hello world!'",
     {"echo", "$HELLO_WORLD", "again!"}
   }
 }
<
Note that the action also has a `name` field, but it is automatically
determined from the key in the |User_config| table when calling the setup
function.

Action                                                                *Action*


    Fields: ~
        {name}            (string)      This is taken from the key in the
                                        |User_config| table.
        {env}             (table|nil)   A table of environment variables.
        {clear_env}       (boolean)     Whether env defined the whole
                                        environment and other environment
                                        variables should be deleted (default:
                                        false).
        {steps}           (table)       A table of commands (strings or
                                        tables) to be executed in order.
        {cwd}             (string|nil)  The working directory of the action.
        {filetypes}       (table|nil)   Filetypes in which the action is
                                        available.
        {patterns}        (table|nil)   Action is available ony in files with
                                        names that match a pattern in this
                                        table of lua patterns.
        {ignore_patterns} (table|nil)   Action is not available in files with
                                        names that match a pattern in this
                                        table of lua patterns.



================================================================================
USER CONFIG                                          *actions.model.user_config*

Actions_user_config is an object that represents a plugin configuration created
by the user. The config's actions are functions returning |Action| objects, so
that they may be loaded when requested, which allows actions relative to the
current context.

Default value:
>
 {
   log = {
     level = vim.log.levels.INFO,
     prefix = "Actions.nvim",
     silent = false,
   },
   mappings = {
     run_kill = "<Enter>",
     show_output = "o",
     show_definition = "d",
   },
   actions = {
     ["Example action"] = function()
       return {
         filetypes = { "help" },
         steps = {
           "echo 'Current file: " .. (vim.fn.expand "%:p") .. "'"
         }
       }
     end
   },
   -- open a window for the output buffer,
   -- but keep focus on the current window
   before_displaying_output = function(bufnr)
     local winid = vim.fn.win_getid(vim.fn.winnr())
     vim.fn.execute("keepjumps vertical sb " .. bufnr, true)
     vim.fn.win_gotoid(winid)
   end,
 }
<

Actions_user_config                                      *Actions_user_config*


    Fields: ~
        {actions}                  (table)                    A table with
                                                              action names as
                                                              keys and
                                                              functions
                                                              returning
                                                              |Action| objects
                                                              as values.
        {before_displaying_output} (function)                 Should always
                                                              open a window
                                                              for the output
                                                              buffer.
        {log}                      (Actions_log_config)       
                                                              |Actions_log_config|
                                                              for the plugin's
                                                              logger.
        {mappings}                 (Actions_mappings_config)  
                                                              |Actions_mappings_config|
                                                              for keymaps in
                                                              the action's
                                                              windows.



================================================================================
LOG CONFIG                                            *actions.model.log_config*

Actions_log_config is an object that represents a configuration for the
plugin's logger.

Actions_log_config                                        *Actions_log_config*


    Fields: ~
        {level}  (number)   a vim.log.levels value (default:
                            vim.log.levels.INFO).
        {prefix} (string)   Prefix added before logs (default:
                            "Actions.nvim").
        {silent} (boolean)  Whether the logging is disabled (default: false).



================================================================================
ACTIONS MAPPING CONFIG                           *actions.model.mappings_config*

Actions_mappings_config is a table of keymaps used in normal mode in the
plugin's windows.

Actions_mappings_config                              *Actions_mappings_config*


    Fields: ~
        {run_kill}        (string)  Run or kill the action under the cursor in
                                    available actions window.
        {show_output}     (string)  Show output of the action under the
                                    cursor.
        {show_definition} (string)  Show definition of the action under the
                                    cursor.



 vim:tw=78:ts=8:ft=help:norl:
